@inherits LayoutComponentBase
@inject ISessionViewModel SessionViewModel
@inject IIntroductionSearchViewModel IntroductionSearchViewModel
@inject ILogger<MainLayoutComponent> Logger
@inject ISnackbar Snackbar

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">Recipe App</MudText>
        <MudText Class="ml-3 mud-link mud-link-underline-hover"
                 Style="cursor: pointer"
                 @onclick="@(_ => SessionViewModel.NavigationManager.NavigateTo("/"))">
            Home
        </MudText>
        <MudText Class="ml-3 mud-link mud-link-underline-hover"
                 Style="cursor: pointer"
                 @onclick="@(_ => SessionViewModel.NavigationManager.NavigateTo("/Details"))">
            New Recipe
        </MudText>
        <MudAppBarSpacer />
        <SessionComponent />
        <MudAutocomplete T="string"
                         Placeholder="Search"
                         Variant="Variant.Outlined"
                         Class="mr-2 mb-1"
                         Style="color: white;"
                         DisableUnderLine="true"
                         InputType="InputType.Text">
        </MudAutocomplete>
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Secondary"
                   Disabled="@(IntroductionSearchViewModel.IsBusy)"
                   OnClick="@SearchAsync">
            Search
        </MudButton>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudMainContent>
        <MudContainer Class="">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    protected string ComponentName = nameof(MainLayoutComponent);

    protected async Task SearchAsync()
    {
        try
        {
            Logger.LogInformation(nameof(SearchAsync));

            IntroductionSearchViewModel.SetBusyFlag(true);
            SessionViewModel.NavigationManager.NavigateTo("/");
            await IntroductionSearchViewModel.SearchAsync();
            using var snack = Snackbar.Add($"Found {IntroductionSearchViewModel.IntroductionSearchResult.Meta.TotalItemCount} result(s)", Severity.Info);
        }
        catch (Exception ex)
        {
            SessionViewModel.HandleException(ex, IntroductionSearchViewModel.ApiResultMessages, ComponentName);
        }
        finally
        {
            IntroductionSearchViewModel.SetBusyFlag(false);
        }
    }

}