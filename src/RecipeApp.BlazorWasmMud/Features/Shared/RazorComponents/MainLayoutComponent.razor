@inherits LayoutComponentBase
@inject ISessionViewModel SessionViewModel
@inject IIntroductionSearchViewModel IntroductionSearchViewModel
@inject ILogger<MainLayoutComponent> Logger
@inject ISnackbar Snackbar

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">Recipe App</MudText>
        <MudText Class="ml-3 mud-link mud-link-underline-hover"
                 Style="cursor: pointer"
                 @onclick="@(_ => SessionViewModel.NavigationManager.NavigateTo("/"))">
            Home
        </MudText>
        <MudText Class="ml-3 mud-link mud-link-underline-hover"
                 Style="cursor: pointer"
                 @onclick="@(_ => SessionViewModel.NavigationManager.NavigateTo("/Details"))">
            New Recipe
        </MudText>
        <MudSpacer />
        <SessionComponent />
        <MudTextField @bind-Value="@(IntroductionSearchViewModel.IntroductionSearchRequestDto.SearchText)"
                      Variant="Variant.Outlined"
                      Placeholder="Search"
                      Class="mr-1 my-2"
                      Style="max-width: 510px; color: white;"  
                      Margin="Margin.Dense" />
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Success"
                   Disabled="@(IntroductionSearchViewModel.IsBusy)"
                   OnClick="@SearchAsync">
            Search
        </MudButton>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudMainContent>
        <MudContainer Class="">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    protected string ComponentName = nameof(MainLayoutComponent);

    protected async Task SearchAsync()
    {
        try
        {
            Logger.LogInformation(nameof(SearchAsync));

            IntroductionSearchViewModel.SetBusyFlag(true);
            SessionViewModel.NavigationManager.NavigateTo("/");
            await IntroductionSearchViewModel.SearchAsync();
            using var snack = Snackbar.Add($"Found {IntroductionSearchViewModel.IntroductionSearchResult.Meta.TotalItemCount} result(s)"
                , Severity.Info
                , (options) => options.RequireInteraction = false);
        }
        catch (Exception ex)
        {
            SessionViewModel.HandleException(ex, IntroductionSearchViewModel.ApiResultMessages, ComponentName);
        }
        finally
        {
            IntroductionSearchViewModel.SetBusyFlag(false);
        }
    }

}